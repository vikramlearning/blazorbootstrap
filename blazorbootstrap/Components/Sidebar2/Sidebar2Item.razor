@namespace BlazorBootstrap
@inherits BlazorBootstrapComponentBase

<div @ref="@Element" id="@Id" class="nav-item nav-item-level-@(Level) @(HasChildren ? "nav-item-group" : "") @(NavItemGroupExpanded ? "active" : "")  @Class" @attributes="@AdditionalAttributes">
    @if (HasChildren)
    {
        <NavLink class="nav-link" style="@NavLinkStyle" role="button" @onclick="ToggleNavItemGroup">
            @{
                var navLinkArrowCssClass = "";
                if (Level == 0 && NavItemGroupExpanded)
                    navLinkArrowCssClass = "ps-1";
                else if (Level > 0 && !NavItemGroupExpanded)
                    navLinkArrowCssClass = "ps-1";
                else if (Level > 0)
                    navLinkArrowCssClass = "ps-2";
            }
            <span class="nav-link-arrow @navLinkArrowCssClass expanded-only">
                <Icon Name="@(NavItemGroupExpanded ? IconName.ChevronDown : IconName.ChevronRight)"/>
            </span>
              
            <span class="nav-link-text ms-2 @(NavItemGroupExpanded ? "fw-semibold" : "") expanded-only">@Text</span>
        </NavLink>
    }
    else
    {
        <NavLink class="nav-link" style="@NavLinkStyle" href="@Href" target="@EnumExtensions.TargetStringMap[Target]" Match="@Match" @onclick="AutoHideNavMenu">
            @{
                var navLinkArrowCssClass = Level == 0 ? "" : "ps-2";
            }
            <span class="nav-link-icon @navLinkArrowCssClass">
                <Icon Name="@IconName" CustomIconName="@CustomIconName" aria-hidden="true" />
            </span> 
            <span class="nav-link-text ms-2 expanded-only">@Text</span>
        </NavLink>
    }

    @if (NavItemGroupExpanded && HasChildren && ChildItems is not null && ChildItems.Any())
    {
        @foreach (var childItem in ChildItems)
        {
            <Sidebar2Item IconName="@childItem.IconName"
                          CustomIconName="@childItem.CustomIconName"
                          IconColor="@childItem.IconColor"
                          Href="@childItem.Href"
                          Text="@childItem.Text"
                          Target="@childItem.Target"
                          Match="@childItem.Match"
                          HasChildren="@childItem.HasChildItems"
                          ChildItems="@childItem.ChildItems"
                          Class="@childItem.Class"
                          Level="@childItem.Level" />
        }
    }
</div>
