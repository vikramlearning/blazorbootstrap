@namespace BlazorBootstrap
@inherits BlazorBootstrapComponentBase

<div @ref="@ElementRef" id="@ElementId" class="@ClassNames" style="@StyleNames" @attributes="@Attributes">
    @if (HasChilds)
    {
        <NavLink class="nav-link" style="@navLinkStyle" role="button" @onclick="ToggleNavItemGroup">
            @if (navitemGroupExpanded)
            {
                <span class="nav-link-arrow expanded-only">
                    <Icon Name="IconName.ChevronDown" />
                </span>
            }
            else
            {
                <span class="nav-link-arrow expanded-only">
                    <Icon Name="IconName.ChevronRight" />
                </span>
            }

            <span class="nav-link-text fw-semibold expanded-only ms-2">@Text</span>

        </NavLink>
    }
    else
    {
        <NavLink class="nav-link" style="@navLinkStyle" href="@Href" target="@targetString" Match="@Match" @onclick="AutoHideNavMenu">
            <span class="nav-link-icon">
                <Icon Class="@iconColorCssClass" Name="@IconName" CustomIconName="@CustomIconName" aria-hidden="true" />
            </span>

            <span class="nav-link-text expanded-only ms-2">@Text</span>
        </NavLink>
    }

    @if (navitemGroupExpanded && HasChilds && ChildItems is not null && ChildItems.Any())
    {
        @foreach (var childItem in ChildItems)
        {
            <TreeViewItem IconName="@childItem.IconName"
                          CustomIconName="@childItem.CustomIconName"
                          IconColor="@childItem.IconColor"
                          Href="@childItem.Href"
                          Text="@childItem.Text"
                          Target="@childItem.Target"
                          Match="@childItem.Match"
                          HasChilds="@childItem.HasChildItems"
                          ChildItems="@childItem.ChildItems"
                          Class="@childItem.Class"
                          Level="@childItem.Level" />
        }
    }
</div>
