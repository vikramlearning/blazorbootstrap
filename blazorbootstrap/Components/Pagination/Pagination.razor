@namespace BlazorBootstrap
@inherits BlazorBootstrapComponentBase

<nav aria-label="Pagination links">
    <ul id="@Id" class="@BootstrapClass.Pagination @EnumExtensions.PaginationSizeClassMap[Size] @EnumExtensions.PaginationAlignmentClassMap[Alignment] @Class" @attributes="@AdditionalAttributes" role="button">
        <PaginationItem Disabled="ActivePageNumber == 1" Text="@(FirstLinkText ?? "First")" @onclick="() => SetPageNumberTo(1)" LinkIcon="@FirstLinkIcon" LinkText="@(FirstLinkText ?? "First")" AriaLabel="@(FirstLinkText ?? "First")"/>
        <PaginationItem Disabled="ActivePageNumber == 1" Text="@(PreviousLinkText ?? "Previous")" @onclick="() => SetPageNumberTo(PreviousPageNumber)" LinkIcon="@PreviousLinkIcon" LinkText="@(PreviousLinkText ?? "Previous")" AriaLabel="@(PreviousLinkText ?? "Previous")" />
        @if (PageFromInclusive > 1)
        {
            <PaginationItem @onclick="() => SetPageNumberTo(PageFromInclusive - 1)" LinkIcon="IconName.ThreeDots"/>
        }
        @for (var i = PageFromInclusive; i <= PageToExclusive; i++)
        {
            var j = i; // local scope
            <PaginationItem Active="ActivePageNumber == i" Text="@j.ToString()" @onclick="() => SetPageNumberTo(j)"/>
        }
        @if (PageToExclusive < TotalPages)
        {
            <PaginationItem @onclick="() => SetPageNumberTo(PageToExclusive + 1)" LinkIcon="IconName.ThreeDots"/>
        }
        <PaginationItem Disabled="ActivePageNumber == TotalPages" Text="@(NextLinkText ?? "Next")" @onclick="() => SetPageNumberTo(NextPageNumber)" LinkIcon="@NextLinkIcon" LinkText="@(NextLinkText ?? "Next")" AriaLabel="@(NextLinkText ?? "Next")" />
        <PaginationItem Disabled="ActivePageNumber == TotalPages" Text="@(LastLinkText ?? "Last")" @onclick="() => SetPageNumberTo(LastPageNumber)" LinkIcon="@LastLinkIcon" LinkText="@(LastLinkText ?? "Last")" AriaLabel="@(LastLinkText ?? "Last")" />
    </ul>
</nav>
