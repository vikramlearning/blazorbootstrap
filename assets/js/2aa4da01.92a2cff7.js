"use strict";(self.webpackChunkblazorbootstrap=self.webpackChunkblazorbootstrap||[]).push([[58746],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),h=r,u=d["".concat(p,".").concat(h)]||d[h]||m[h]||o;return n?a.createElement(u,l(l({ref:t},c),{},{components:n})):a.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=h;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},74404:(e,t,n)=>{n.d(t,{ZP:()=>c});var a=n(87462),r=n(67294),o=n(3905);class l extends r.Component{constructor(e){super(e),this.name=this.props.name||"docsblazorbootstrapcom",this.serve=this.props.serve||"CWYICKJI",this.script=this.props.script||null,this.placement=this.props.placement||"",this.fallback=this.props.fallback||null,this.showFallback=!1}adShowing=()=>null!==document.getElementById(`${this.name} #carbonads`);componentDidMount=()=>{let e=document.createElement("script");e.defer=!!this.script,e.async=!0,e.id=this.script?"":"_carbonads_js",e.type="text/javascript",e.src=this.script||`//cdn.carbonads.com/carbon.js?serve=${this.serve}&placement=${this.placement}`,e.onerror=()=>{this.showFallback=!0,this.forceUpdate()},e.addEventListener("load",(()=>{this.adShowing||_.invoke(window._carbonads,"refresh")})),document.querySelector(`#${this.name}`).appendChild(e)};render(){return this.showFallback&&this.fallback?this.fallback:r.createElement("div",{id:this.name})}}const i=l,p={toc:[]},s="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(i,{mdxType:"CarbonAd"}))}c.isMDXComponent=!0},13792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var a=n(87462),r=(n(67294),n(3905)),o=n(74404);const l={title:"Blazor Preload Component",description:"Indicate the loading state of a page with Blazor Bootstrap preload component.",image:"https://i.imgur.com/2cPuqFa.png",sidebar_label:"Preload",sidebar_position:19},i="Blazor Preload",p={unversionedId:"components/preload",id:"components/preload",title:"Blazor Preload Component",description:"Indicate the loading state of a page with Blazor Bootstrap preload component.",source:"@site/docs/05-components/preload.mdx",sourceDirName:"05-components",slug:"/components/preload",permalink:"/components/preload",draft:!1,editUrl:"https://github.com/vikramlearning/blazorbootstrap/edit/master/docs/docs/05-components/preload.mdx",tags:[],version:"current",sidebarPosition:19,frontMatter:{title:"Blazor Preload Component",description:"Indicate the loading state of a page with Blazor Bootstrap preload component.",image:"https://i.imgur.com/2cPuqFa.png",sidebar_label:"Preload",sidebar_position:19},sidebar:"tutorialSidebar",previous:{title:"Placeholders",permalink:"/components/placeholders"},next:{title:"Progress",permalink:"/components/progress"}},s={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Preload Service",id:"preload-service",level:2},{value:"Methods",id:"methods",level:3},{value:"Global preload service for the application",id:"global-preload-service-for-the-application",level:2},{value:"Change loading text",id:"change-loading-text",level:2},{value:"Change spinner color",id:"change-spinner-color",level:2}],d={toc:c},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"blazor-preload"},"Blazor Preload"),(0,r.kt)("p",null,"Indicate the loading state of a page with Blazor Bootstrap preload component."),(0,r.kt)(o.ZP,{mdxType:"CarbonAd"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Things to know when using the ",(0,r.kt)("inlineCode",{parentName:"strong"},"Preload")," component:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add the ",(0,r.kt)("inlineCode",{parentName:"li"},"Preload")," component to your ",(0,r.kt)("strong",{parentName:"li"},"current page")," or your ",(0,r.kt)("strong",{parentName:"li"},"layout page"),"."),(0,r.kt)("li",{parentName:"ul"},"Inject ",(0,r.kt)("inlineCode",{parentName:"li"},"PreloadService")),(0,r.kt)("li",{parentName:"ul"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"PreloadService.Show()")," before you make any call to the API."),(0,r.kt)("li",{parentName:"ul"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"PreloadService.Hide()")," after you get the response from the API.")),(0,r.kt)("img",{src:"https://i.imgur.com/2cPuqFa.png",alt:"Blazor Bootstrap: Blazor Preload Component - Default"}),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Added Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ChildContent"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RenderFragment"),(0,r.kt)("td",{parentName:"tr",align:"left"},"null"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the content to be rendered within the component."),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.1.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LoadingText"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"null"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the loading text."),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.10.4")))),(0,r.kt)("h2",{id:"preload-service"},"Preload Service"),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Added Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Show(SpinnerColor spinnerColor = SpinnerColor.Light)"),(0,r.kt)("td",{parentName:"tr",align:null},"void"),(0,r.kt)("td",{parentName:"tr",align:null},"Shows the preload."),(0,r.kt)("td",{parentName:"tr",align:null},"1.1.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Show(SpinnerColor spinnerColor = SpinnerColor.Light, string? loadingText = null)"),(0,r.kt)("td",{parentName:"tr",align:null},"void"),(0,r.kt)("td",{parentName:"tr",align:null},"Shows the preload."),(0,r.kt)("td",{parentName:"tr",align:null},"1.10.4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Hide()"),(0,r.kt)("td",{parentName:"tr",align:null},"void"),(0,r.kt)("td",{parentName:"tr",align:null},"Hides the preload."),(0,r.kt)("td",{parentName:"tr",align:null},"1.1.0")))),(0,r.kt)("h2",{id:"global-preload-service-for-the-application"},"Global preload service for the application"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add the ",(0,r.kt)("inlineCode",{parentName:"li"},"Preload")," component in ",(0,r.kt)("strong",{parentName:"li"},"MainLayout.razor")," page as shown below.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cshtml",metastring:"{} showLineNumbers","{}":!0,showLineNumbers:!0},'@using BlazorBootstrap\n.\n.\n\n... MainLayout.razor code goes here ...\n\n.\n.\n<Preload LoadingText="Loading..." />\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Inject ",(0,r.kt)("inlineCode",{parentName:"li"},"PreloadService"),", then call the ",(0,r.kt)("inlineCode",{parentName:"li"},"Show()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Hide()")," methods before and after the Service/API call, respectively, as shown below.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs",metastring:"{} showLineNumbers","{}":!0,showLineNumbers:!0},"@code {\n\n    [Inject] protected PreloadService PreloadService { get; set; }\n\n    private void GetEmployees()\n    {\n        try\n        {\n            PreloadService.Show();\n\n            // call the service/api to get the employees\n        }\n        catch\n        {\n            // handle exception\n        }\n        finally\n        {\n            PreloadService.Hide();\n        }\n    }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://demos.blazorbootstrap.com/preload#global-preload-service-for-the-application"},"See Preload demo here.")),(0,r.kt)("h2",{id:"change-loading-text"},"Change loading text"),(0,r.kt)("img",{src:"https://i.imgur.com/nzNRyp7.png",alt:"Blazor Bootstrap: Blazor Preload Component - Change loading text"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cshtml",metastring:"{} showLineNUmbers","{}":!0,showLineNUmbers:!0},'<Button Color="ButtonColor.Primary" @onclick="ShowLoadingDataAsync">Show Loading data...</Button>\n<Button Color="ButtonColor.Dark" @onclick="ShowSavingDataAsync">Show Saving data...</Button>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs",metastring:"{} showLineNumbers","{}":!0,showLineNumbers:!0},'@code {\n    [Inject] protected PreloadService PreloadService { get; set; }\n\n    private async Task ShowLoadingDataAsync()\n    {\n        PreloadService.Show(SpinnerColor.Light, "Loading data...");\n        await Task.Delay(3000); // call the service/api\n        PreloadService.Hide();\n    }\n\n    private async Task ShowSavingDataAsync()\n    {\n        PreloadService.Show(SpinnerColor.Light, "Saving data...");\n        await Task.Delay(3000); // call the service/api\n        PreloadService.Hide();\n    }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://demos.blazorbootstrap.com/preload#change-loading-text"},"See Preload demo here.")),(0,r.kt)("h2",{id:"change-spinner-color"},"Change spinner color"),(0,r.kt)("p",null,"Change the default spinner color by passing the ",(0,r.kt)("inlineCode",{parentName:"p"},"SpinnerColor")," enum to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Show(...)")," method. In the below example, we are using a ",(0,r.kt)("a",{parentName:"p",href:"/components/preload#global-preload-service-for-the-application"},"global preload service"),", as shown in the above section."),(0,r.kt)("img",{src:"https://i.imgur.com/5PVt5bX.png",alt:"Blazor Bootstrap: Blazor Preload Component - Change spinner color"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cshml",metastring:"{} showLineNumbers","{}":!0,showLineNumbers:!0},'<Button Color="ButtonColor.Primary" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Primary)">Primary Spinner</Button>\n<Button Color="ButtonColor.Secondary" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Secondary)">Secondary Spinner</Button>\n<Button Color="ButtonColor.Success" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Success)">Success Spinner</Button>\n<Button Color="ButtonColor.Danger" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Danger)">Danger Spinner</Button>\n<Button Color="ButtonColor.Warning" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Warning)">Warning Spinner</Button>\n<Button Color="ButtonColor.Info" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Info)">Info Spinner</Button>\n<Button Color="ButtonColor.Light" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Light)">Light Spinner</Button>\n<Button Color="ButtonColor.Dark" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Dark)">Dark Spinner</Button>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs",metastring:"{} showLineNumbers","{}":!0,showLineNumbers:!0},"@code {\n    [Inject] protected PreloadService PreloadService { get; set; }\n\n    private async Task ShowSpinnerAsync(SpinnerColor spinnerColor)\n    {\n        PreloadService.Show(spinnerColor);\n\n        await Task.Delay(3000); // call the service/api\n\n        PreloadService.Hide();\n    }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://demos.blazorbootstrap.com/preload#change-spinner-color"},"See Preload demo here.")))}h.isMDXComponent=!0}}]);