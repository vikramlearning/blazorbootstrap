"use strict";(self.webpackChunkblazorbootstrap=self.webpackChunkblazorbootstrap||[]).push([[77273],{3905:(t,a,e)=>{e.d(a,{Zo:()=>p,kt:()=>h});var r=e(67294);function n(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function l(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,r)}return e}function i(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?l(Object(e),!0).forEach((function(a){n(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function o(t,a){if(null==t)return{};var e,r,n=function(t,a){if(null==t)return{};var e,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)e=l[r],a.indexOf(e)>=0||(n[e]=t[e]);return n}(t,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)e=l[r],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(n[e]=t[e])}return n}var d=r.createContext({}),s=function(t){var a=r.useContext(d),e=a;return t&&(e="function"==typeof t?t(a):i(i({},a),t)),e},p=function(t){var a=s(t.components);return r.createElement(d.Provider,{value:a},t.children)},m="mdxType",k={inlineCode:"code",wrapper:function(t){var a=t.children;return r.createElement(r.Fragment,{},a)}},f=r.forwardRef((function(t,a){var e=t.components,n=t.mdxType,l=t.originalType,d=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),m=s(e),f=n,h=m["".concat(d,".").concat(f)]||m[f]||k[f]||l;return e?r.createElement(h,i(i({ref:a},p),{},{components:e})):r.createElement(h,i({ref:a},p))}));function h(t,a){var e=arguments,n=a&&a.mdxType;if("string"==typeof t||n){var l=e.length,i=new Array(l);i[0]=f;var o={};for(var d in a)hasOwnProperty.call(a,d)&&(o[d]=a[d]);o.originalType=t,o[m]="string"==typeof t?t:n,i[1]=o;for(var s=2;s<l;s++)i[s]=e[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,e)}f.displayName="MDXCreateElement"},74404:(t,a,e)=>{e.d(a,{ZP:()=>p});var r=e(87462),n=e(67294),l=e(3905);class i extends n.Component{constructor(t){super(t),this.name=this.props.name||"docsblazorbootstrapcom",this.serve=this.props.serve||"CW7ILK7W",this.script=this.props.script||null,this.placement=this.props.placement||"",this.format=this.props.format||"cover",this.fallback=this.props.fallback||null,this.showFallback=!1}adShowing=()=>null!==document.getElementById(`${this.name} #carbonads`);componentDidMount=()=>{let t=document.createElement("script");t.defer=!!this.script,t.async=!0,t.id=this.script?"":"_carbonads_js",t.type="text/javascript",t.src=this.script||`//cdn.carbonads.com/carbon.js?serve=${this.serve}&placement=${this.placement}&format=${this.format}`,t.onerror=()=>{this.showFallback=!0,this.forceUpdate()},t.addEventListener("load",(()=>{this.adShowing||_.invoke(window._carbonads,"refresh")})),document.querySelector(`#${this.name}`).appendChild(t)};render(){return this.showFallback&&this.fallback?this.fallback:n.createElement("div",{id:this.name})}}const o=i,d={toc:[]},s="wrapper";function p(t){let{components:a,...e}=t;return(0,l.kt)(s,(0,r.Z)({},d,e,{components:a,mdxType:"MDXLayout"}),(0,l.kt)(o,{mdxType:"CarbonAd"}))}p.isMDXComponent=!0},17968:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var r=e(87462),n=(e(67294),e(3905)),l=e(74404);const i={title:"Blazor Polar Area Chart Component",description:"A Blazor Bootstrap polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.",image:"https://i.imgur.com/xLAqwGi.png",sidebar_label:"Polar Area Chart",sidebar_position:5},o="Blazor Polar Area Chart",d={unversionedId:"data-visualization/polar-area-chart",id:"data-visualization/polar-area-chart",title:"Blazor Polar Area Chart Component",description:"A Blazor Bootstrap polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.",source:"@site/docs/06-data-visualization/polar-area-chart.mdx",sourceDirName:"06-data-visualization",slug:"/data-visualization/polar-area-chart",permalink:"/data-visualization/polar-area-chart",draft:!1,editUrl:"https://github.com/vikramlearning/blazorbootstrap/edit/master/docs/docs/06-data-visualization/polar-area-chart.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Blazor Polar Area Chart Component",description:"A Blazor Bootstrap polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.",image:"https://i.imgur.com/xLAqwGi.png",sidebar_label:"Polar Area Chart",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Pie Chart",permalink:"/data-visualization/pie-chart"},next:{title:"Radar Chart",permalink:"/data-visualization/radar-chart"}},s={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"ChartData Members",id:"chartdata-members",level:2},{value:"PolarAreaChartDataset Members",id:"polarareachartdataset-members",level:2},{value:"PolarAreaChartDatasetDataLabels Members",id:"polarareachartdatasetdatalabels-members",level:2},{value:"PolarAreaChartOptions Members",id:"polarareachartoptions-members",level:2},{value:"Examples",id:"examples",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"How it works",id:"how-it-works",level:3}],m={toc:p},k="wrapper";function f(t){let{components:a,...e}=t;return(0,n.kt)(k,(0,r.Z)({},m,e,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"blazor-polar-area-chart"},"Blazor Polar Area Chart"),(0,n.kt)("p",null,"A Blazor Bootstrap polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value."),(0,n.kt)(l.ZP,{mdxType:"CarbonAd"}),(0,n.kt)("img",{src:"https://i.imgur.com/xLAqwGi.png",alt:"Blazor Chart Component - Blazor Polar Area Chart"}),(0,n.kt)("h2",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Added Version"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Height"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"int?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets chart container height."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"HeightUnit"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Unit")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Unit.Px")),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets chart container height unit of measure."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Width"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"int?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets chart container width."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"WidthUnit"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Unit")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Unit.Px")),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets chart container width unit of measure."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")))),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Return type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Added Version"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"AddDataAsync(ChartData chartData, string dataLabel, IChartDatasetData data)"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Task<ChartData>")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Adds data to chart."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"AddDataAsync(ChartData chartData, string dataLabel, ",(0,n.kt)("inlineCode",{parentName:"td"},"List<IChartDatasetData>")," data)"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Task<ChartData>")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Adds dataset to chart."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"AddDatasetAsync(ChartData chartData, IChartDataset chartDataset, IChartOptions chartOptions)"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Task<ChartData>")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Adds dataset to chart."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"InitializeAsync(ChartData chartData, IChartOptions chartOptions, ",(0,n.kt)("inlineCode",{parentName:"td"},"string[]?")," plugins = null)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Task"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Initialize the chat."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"ResizeAsync(int width, int height, Unit widthUnit = Unit.Px, Unit heightUnit = Unit.Px)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Task"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Resize the chart."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"UpdateAsync(ChartData chartData, IChartOptions chartOptions)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Task"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Update the chart."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")))),(0,n.kt)("h2",{id:"chartdata-members"},"ChartData Members"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Added Version"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Datasets"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<IChartDataset>")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the Datasets."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Labels"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<string>")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the Labels."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")))),(0,n.kt)("h2",{id:"polarareachartdataset-members"},"PolarAreaChartDataset Members"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"PolarAreaChartDataset")," implements ",(0,n.kt)("strong",{parentName:"p"},"IChartDataset")," and inherits from the parent class ",(0,n.kt)("strong",{parentName:"p"},"ChartDataset"),".")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Added Version"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BackgroundColor"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<string>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc background color."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BorderAlign"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<string>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Supported values are 'center' and 'inner'. When 'center' is set, the borders of arcs next to each other will overlap. When 'inner' is set, it is guaranteed that all borders will not overlap."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BorderColor"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<string>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border color."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BorderDash"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<double>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border length and spacing of dashes."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BorderDashOffset"),(0,n.kt)("td",{parentName:"tr",align:"left"},"double"),(0,n.kt)("td",{parentName:"tr",align:"left"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border offset for line dashes."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BorderJoinStyle"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<string>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border join style. Supported values are 'round', 'bevel', 'miter'."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BorderWidth"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<double>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border width (in pixels)."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Circular"),(0,n.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"left"},"true"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"By default the Arc is curved. If false, the Arc will be flat."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Clip"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"How to clip relative to chartArea. Positive value allows overflow, negative value clips that many pixels inside chartArea. 0 = clip at chartArea. Clipping can also be configured per side: ",(0,n.kt)("inlineCode",{parentName:"td"},"clip: {left: 5, top: false, right: -2, bottom: 0}")),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Data"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<double?>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Get or sets the Data."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Datalabels"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"PieChartDatasetDataLabels")),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Get or sets the data labels"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Hidden"),(0,n.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"left"},"false"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configures the visibility state of the dataset. Set it to true, to hide the dataset from the chart."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"HoverBackgroundColor"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<string>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc background color when hovered."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"HoverBorderColor"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<string>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border color when hovered."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"HoverBorderDash"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<double>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border length and spacing of dashes when hovered."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"HoverBorderDashOffset"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"double?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border offset for line dashes when hovered."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"HoverBorderJoinStyle"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<string>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border join style when hovered. Supported values are 'round', 'bevel', 'miter'."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"HoverBorderWidth"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"List<double>?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Arc border width when hovered (in pixels)."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Label"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string?")),(0,n.kt)("td",{parentName:"tr",align:"left"},"null"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"The label for the dataset which appears in the legend and tooltips."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Order"),(0,n.kt)("td",{parentName:"tr",align:"left"},"int"),(0,n.kt)("td",{parentName:"tr",align:"left"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"The drawing order of dataset. Also affects order for stacking, tooltip and legend."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")))),(0,n.kt)("h2",{id:"polarareachartdatasetdatalabels-members"},"PolarAreaChartDatasetDataLabels Members"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"PolarAreaChartDatasetDataLabels")," inherits from the parent class  ",(0,n.kt)("strong",{parentName:"p"},"ChartDatasetDataLabels"),".")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Added Version"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Alignment"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Alignment")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Alignment.None")),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the data labels alignment."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Anchor"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Anchor")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Anchor.None")),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the data labels anchor."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"BorderWidth"),(0,n.kt)("td",{parentName:"tr",align:"left"},"double"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the border width"),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")))),(0,n.kt)("h2",{id:"polarareachartoptions-members"},"PolarAreaChartOptions Members"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"PolarAreaChartOptions")," inherits from the parent class ",(0,n.kt)("strong",{parentName:"p"},"ChartOptions"),".")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Property Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Added Version"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Locale"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string?")),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the locale. By default, the chart is using the default locale of the platform which is running on."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"MaintainAspectRatio"),(0,n.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"left"},"true"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Maintain the original canvas aspect ratio (width / height) when resizing."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Plugins"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"PolarAreaChartPlugins")),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Gets or sets the Plugins."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Responsive"),(0,n.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"left"},"false"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"Resizes the chart canvas when its container does."),(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0")))),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("p",null,"Refer to the ",(0,n.kt)("a",{parentName:"p",href:"/getting-started/blazor-webassembly"},"getting started guide")," for setting up charts."),(0,n.kt)("h3",{id:"how-it-works"},"How it works"),(0,n.kt)("p",null,"In the following example, a ",(0,n.kt)("a",{parentName:"p",href:"https://demos.blazorbootstrap.com/utils/color-utility"},"categorical 12-color")," palette is used."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"For data visualization, you can use the predefined palettes ",(0,n.kt)("inlineCode",{parentName:"p"},"ColorBuilder.CategoricalTwelveColors")," for a 12-color palette and ",(0,n.kt)("inlineCode",{parentName:"p"},"ColorBuilder.CategoricalSixColors")," for a 6-color palette.\nThese palettes offer a range of distinct and visually appealing colors that can be applied to represent different categories or data elements in your visualizations.")),(0,n.kt)("img",{src:"https://i.imgur.com/xLAqwGi.png",alt:"Blazor Bootstrap: Polar Area Chart Component - How it works"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cshtml",metastring:"{} showLineNumbers","{}":!0,showLineNumbers:!0},'<PolarAreaChart @ref="polarAreaChart" Width="600" />\n\n<div class="mt-5">\n    <button class="btn btn-primary btn-sm" @onclick="async () => await RandomizeAsync()"> Randomize </button>\n    <button class="btn btn-primary btn-sm" @onclick="async () => await AddDatasetAsync()"> Add Dataset </button>\n    <button class="btn btn-primary btn-sm" @onclick="async () => await AddDataAsync()">Add Data</button>\n</div>\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs",metastring:"{} showLineNumbers","{}":!0,showLineNumbers:!0},'@code {\n    private PolarAreaChart polarAreaChart = default!;\n    private PolarAreaChartOptions polarAreaChartOptions = default!;\n    private ChartData chartData = default!;\n    private string[]? chartColors;\n\n    private int datasetsCount = 0;\n    private int dataLabelsCount = 0;\n\n    private Random random = new();\n\n    protected override void OnInitialized()\n    {\n        chartColors = ColorUtility.CategoricalTwelveColors;\n        chartData = new ChartData { Labels = GetDefaultDataLabels(5), Datasets = GetDefaultDataSets(1) };\n        polarAreaChartOptions = new();\n        polarAreaChartOptions.Responsive = true;\n        polarAreaChartOptions.Plugins.Title!.Text = "2022 - Sales";\n        polarAreaChartOptions.Plugins.Title.Display = true;\n    }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            await polarAreaChart.InitializeAsync(chartData, polarAreaChartOptions);\n        }\n        await base.OnAfterRenderAsync(firstRender);\n    }\n\n    private async Task RandomizeAsync()\n    {\n        if (chartData is null || chartData.Datasets is null || !chartData.Datasets.Any()) return;\n\n        var newDatasets = new List<IChartDataset>();\n\n        foreach (var dataset in chartData.Datasets)\n        {\n            if (dataset is PolarAreaChartDataset polarAreaChartDataset\n                && polarAreaChartDataset is not null\n                && polarAreaChartDataset.Data is not null)\n            {\n                var count = polarAreaChartDataset.Data.Count;\n\n                var newData = new List<double?>();\n                for (var i = 0; i < count; i++)\n                {\n                    newData.Add(random.Next(0, 100));\n                }\n\n                var backgroundColors = new List<string>();\n                for (var index = 0; index < count; index++)\n                {\n                    backgroundColors.Add(chartColors![index].ToColor().ToRgbaString(0.5)); // RGBA\n                }\n\n                polarAreaChartDataset.Data = newData;\n                polarAreaChartDataset.BackgroundColor = backgroundColors;\n                newDatasets.Add(polarAreaChartDataset);\n            }\n        }\n\n        chartData.Datasets = newDatasets;\n\n        await polarAreaChart.UpdateAsync(chartData, polarAreaChartOptions);\n    }\n\n    private async Task AddDatasetAsync()\n    {\n        if (chartData is null || chartData.Datasets is null) return;\n\n        var chartDataset = GetRandomPolarAreaChartDataset();\n        chartData = await polarAreaChart.AddDatasetAsync(chartData, chartDataset, polarAreaChartOptions);\n    }\n\n    private async Task AddDataAsync()\n    {\n        if (dataLabelsCount >= 12)\n            return;\n\n        if (chartData is null || chartData.Datasets is null)\n            return;\n\n        dataLabelsCount += 1;\n\n        var data = new List<IChartDatasetData>();\n        foreach (var dataset in chartData.Datasets)\n        {\n            if (dataset is PolarAreaChartDataset polarAreaChartDataset)\n                data.Add(new PolarAreaChartDatasetData(polarAreaChartDataset.Label, random.Next(0, 100), chartColors![dataLabelsCount - 1].ToColor().ToRgbaString(0.5), null));\n        }\n\n        chartData = await polarAreaChart.AddDataAsync(chartData, GetNextDataLabel(), data);\n    }\n\n    #region Data Preparation\n\n    private List<string> GetDefaultDataLabels(int numberOfLabels)\n    {\n        var labels = new List<string>();\n        for (var index = 0; index < numberOfLabels; index++)\n        {\n            dataLabelsCount += 1;\n            labels.Add(GetNextDataLabel());\n        }\n\n        return labels;\n    }\n\n    private string GetNextDataLabel() => $"Product {dataLabelsCount}";\n\n    private List<IChartDataset> GetDefaultDataSets(int numberOfDatasets)\n    {\n        var datasets = new List<IChartDataset>();\n\n        for (var index = 0; index < numberOfDatasets; index++)\n        {\n            datasets.Add(GetRandomPolarAreaChartDataset());\n        }\n\n        return datasets;\n    }\n\n    private PolarAreaChartDataset GetRandomPolarAreaChartDataset()\n    {\n        datasetsCount += 1;\n        return new()\n            {\n                Label = $"Team {datasetsCount}",\n                Data = GetRandomData(),\n                BackgroundColor = GetRandomBackgroundColors()\n            };\n    }\n\n    private List<double?> GetRandomData()\n    {\n        var data = new List<double?>();\n        for (var index = 0; index < dataLabelsCount; index++)\n        {\n            data.Add(random.Next(0, 100));\n        }\n\n        return data;\n    }\n\n    private List<string> GetRandomBackgroundColors()\n    {\n        var colors = new List<string>();\n        for (var index = 0; index < dataLabelsCount; index++)\n        {\n            colors.Add(chartColors![index].ToColor().ToRgbaString(0.5)); // RGBA\n        }\n\n        return colors;\n    }\n\n    private List<string> GetRandomBorderColors()\n    {\n        var colors = new List<string>();\n        for (var index = 0; index < dataLabelsCount; index++)\n        {\n            colors.Add(chartColors![index].ToColor().ToRgbString()); // RGB\n        }\n\n        return colors;\n    }\n\n    #endregion  Data Preparation\n}\n')),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://demos.blazorbootstrap.com/charts/polar-area-chart#how-it-works"},"See the demo here.")))}f.isMDXComponent=!0}}]);