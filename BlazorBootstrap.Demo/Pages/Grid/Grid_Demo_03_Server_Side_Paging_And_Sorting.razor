<Grid TItem="Employee" class="table table-hover table-bordered" DataProvider="EmployeesDataProvider" AllowPaging="true" AllowSorting="true">
    <GridColumn TItem="Employee" HeaderText="Id" SortString="Id" SortKeySelector="@(item => item.Id)">
        @context.Id
    </GridColumn>
    <GridColumn TItem="Employee" HeaderText="Firs tName" SortString="FirstName" SortKeySelector="@(item => item.FirstName)" IsDefaultSortColumn="true" SortDirection="SortDirection.Descending">
        @context.FirstName
    </GridColumn>
    <GridColumn TItem="Employee" HeaderText="Last Name" SortString="LastName" SortKeySelector="@(item => item.LastName)">
        @context.LastName
    </GridColumn>
    <GridColumn TItem="Employee" HeaderText="Designation" SortString="Designation" SortKeySelector="@(item => item.Designation)">
        @context.Designation
    </GridColumn>
</Grid>

@code {
    [Inject] public IEmployeeService _employeeService { get; set; }

    private async Task<GridDataProviderResult<Employee>> EmployeesDataProvider(GridDataProviderRequest<Employee> request)
    {
        var result = _employeeService.GetEmployees(request.PageNumber, request.PageSize, request.Sorting[0].SortString, request.Sorting[0].SortDirection);

        return await Task.FromResult(new GridDataProviderResult<Employee> { Data = result.Item1, TotalCount = result.Item2 });
    }
}
