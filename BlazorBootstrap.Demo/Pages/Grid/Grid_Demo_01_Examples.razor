<Grid TItem="Employee" class="table table-hover" DataProvider="EmployeesDataProvider">
    <GridColumn TItem="Employee" Context="employee" HeaderText="Id" SortKeySelector="@(item => item.Id)" IsDefaultSortColumn="true">
        @employee.Id
    </GridColumn>
    <GridColumn TItem="Employee" Context="employee" HeaderText="FirstName" SortKeySelector="@(item => item.FirstName)">
        @employee.FirstName
    </GridColumn>
    <GridColumn TItem="Employee" Context="employee" HeaderText="LastName" SortKeySelector="@(item => item.LastName)">
        @employee.LastName
    </GridColumn>
    <GridColumn TItem="Employee" Context="employee" HeaderText="Designation" SortKeySelector="@(item => item.Designation)">
        @employee.Designation
    </GridColumn>
</Grid>

@code {
    private IEnumerable<Employee> employees;

    protected override void OnInitialized()
    {
        employees = new List<Employee>
        {
            new Employee { Id = 101, FirstName = "Alice", LastName = "Reddy", Designation = "AI Engineer" },
            new Employee { Id = 103, FirstName = "Bob", LastName = "Roy", Designation = "Senior DevOps Engineer" },
            new Employee { Id = 104, FirstName = "John", LastName = "Papa", Designation = "Data Engineer" },
            new Employee { Id = 105, FirstName = "Pop", LastName = "Two", Designation = "Associate Architect" },
            new Employee { Id = 104, FirstName = "Ronald", LastName = "Dire", Designation = "Senior Data Engineer" },
            new Employee { Id = 106, FirstName = "Line", LastName = "K", Designation = "Architect" }
        };
    }

    private async Task<GridDataProviderResult<Employee>> EmployeesDataProvider(GridDataProviderRequest<Employee> request)
    {
        return await Task.FromResult(request.ApplyTo(employees));
    }
}
