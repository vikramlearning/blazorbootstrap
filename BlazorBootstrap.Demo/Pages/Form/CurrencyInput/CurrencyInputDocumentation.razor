@page "/form/currency-input"

<PageTitle>@title</PageTitle>

<MetaTags PageUrl="@pageUrl" Title="@title" Description="@description" ImageUrl="@imageUrl" />

<h1>Blazor Currency Input</h1>
<div class="mb-3">
    Blazor Bootstrap <code>CurrencyInput</code> component is similar to the <code>NumberInput</code> component. 
    The significant difference here is that a user can set the currency locale. So the formatted value will be displayed. 
    And also, the user can set the <b>minimum integer digits</b>, <b>minimum fraction digits</b>, and <b>maximum fraction digits</b>.
</div>

<SectionHeading Size="HeadingSize.H2" Text="Basic usage" PageUrl="@pageUrl" HashTagName="basic-usage" />
<Callout Type="CalloutType.Tip">
    By default, the currency symbol is not displayed. Set <code>ShowCurrencySymbol</code> parameter value to <code>true</code> to show the currency symbol.
</Callout>
<div class="mb-3">By default, <code>e + -</code> are blocked. For all integral numeric types, dot <code>.</code> is blocked.</div>
<Demo Type="typeof(CurrencyInput_Demo_01_Basic_Usage)" Tabs="true" />

<SectionHeading Size="HeadingSize.H2" Text="Validations" PageUrl="@pageUrl" HashTagName="validations" />
<div class="mb-3">
    Like any other blazor input components, <code>NumberInput</code> supports validations.
    Add the DataAnnotations on the <code>NumberInput</code> component to validate the user input before submitting the form.
    In the below example, we used <b>Required</b> and <b>Range</b> attributes.
</div>
<Demo Type="typeof(CurrencyInput_Demo_08_Validations)" Tabs="true" />

@code {
    private string pageUrl = "/form/currency-input";
    private string title = "Blazor NumberInput Component";
    private string description = "Blazor Bootstrap NumberInput component is built around HTML input of type=\"number\" that prevents the user input based on the parameters set.";
    private string imageUrl = "https://i.imgur.com/iUNBkki.png";
}
