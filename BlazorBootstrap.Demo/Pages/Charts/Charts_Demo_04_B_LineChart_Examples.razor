<LineChart @ref="lineChart" />

<Button Color="ButtonColor.Primary" Type="ButtonType.Button" Size="Size.Small" @onclick="UpdateIndiaNextOverRunsAsync"> India Next Over </Button>
<Button Color="ButtonColor.Primary" Type="ButtonType.Button" Size="Size.Small" @onclick="UpdateEnglandNextOverRunsAsync"> England Next Over </Button>

@code {
    private LineChart lineChart;
    private LineChartOptions lineChartOptions;
    private ChartData chartData;
    private List<string> chartXLabels;
    private List<string> chartYLabels;

    private List<double> indiaRuns = new() { 9, 20, 29, 33, 50, 66, 75, 86, 91, 105, 120, 126, 141, 150, 156, 164, 177, 180, 184, 195 };
    private List<double> englandRuns = new() { 1, 1, 8, 19, 24, 26, 39, 47, 56, 66, 75, 88, 95, 100, 109, 114, 124, 129, 140, 142 };

    private int indiaCurrentOver = 0;
    private int englandCurrentOver = 0;

    protected override void OnInitialized()
    {
        chartXLabels = new List<string> { "111", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" };
        chartYLabels = new List<string> { "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140", "150", "160", "170", "180", "190", "200" };
        lineChartOptions = GetLineChartOptions();
        chartData = new ChartData { XLabels = chartXLabels, YLabels = chartYLabels, Datasets = GetDefaultDatasets() };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await lineChart.UpdateAsync(chartData, lineChartOptions);
    }

    private async Task UpdateIndiaNextOverRunsAsync()
    {
        chartData = await lineChart.AddDataAsync(chartData, $"{indiaCurrentOver}", "India", indiaRuns[indiaCurrentOver]);
        indiaCurrentOver++;
    }

    private async Task UpdateEnglandNextOverRunsAsync()
    {
        chartData = await lineChart.AddDataAsync(chartData, $"{indiaCurrentOver}", "England", englandRuns[englandCurrentOver]);
        englandCurrentOver++;
    }

    private List<IChartDataset> GetDefaultDatasets()
    {
        var datasets = new List<IChartDataset>()
                       {
                           new LineChartDataset()
                           {
                               Label = "India",
                               Data = new List<double>(),
                               BackgroundColor = new List<string>{ "rgb(88, 80, 141)" },
                               BorderColor = new List<string>{ "rgb(88, 80, 141)" },
                               BorderWidth = new List<double>{2},
                               HoverBorderWidth = new List<double>{4},
                               PointBackgroundColor = new List<string>{ "rgb(88, 80, 141)" },
                               PointBorderColor = new List<string>{ "rgb(88, 80, 141)" },
                               PointRadius = new List<int>{0}, // hide points
                               PointHoverRadius = new List<int>{4},
                           },
                           new LineChartDataset()
                           {
                               Label = "England",
                               Data = new List<double>(),
                               BackgroundColor = new List<string>{ "rgb(255, 166, 0)" },
                               BorderColor = new List<string>{ "rgb(255, 166, 0)" },
                               BorderWidth = new List<double>{2},
                               HoverBorderWidth = new List<double>{4},
                               PointBackgroundColor = new List<string>{ "rgb(255, 166, 0)" },
                               PointBorderColor = new List<string>{ "rgb(255, 166, 0)" },
                               PointRadius = new List<int>{0}, // hide points
                               PointHoverRadius = new List<int>{4},
                           }
                       };

        return datasets;
    }

    private LineChartOptions GetLineChartOptions()
    {
        var options = new LineChartOptions();

        options.Interaction.Mode = InteractionMode.Index;

        options.Plugins.Title.Text = "WORM";
        options.Plugins.Title.Display = true;
        options.Plugins.Title.Font.Size = 20;

        options.Responsive = true;

        options.Scales.X.Title.Text = "Overs";
        options.Scales.X.Title.Display = true;

        options.Scales.Y.Title.Text = "Runs";
        options.Scales.Y.Title.Display = true;

        return options;
    }
}
