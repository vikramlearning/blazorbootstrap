<Tabs @ref="tabs">
    @foreach (var customer in customers)
    {
        <Tab Title="@customer.CustomerName"
             OnClick="(args) => OnTabClick(args, customer)">
            <Content>
                <div class="mt-3">
                    This is the placeholder content for the <b>@customer.CustomerName</b> tab.
                </div>
            </Content>
        </Tab>
    }
</Tabs>

@if (selectedCustomer is not null)
{
    <div class="mt-3">Selected customer: <b>@selectedCustomer.CustomerName</b></div>
}

<Button Color="ButtonColor.Success" Class="mt-3" @onclick="AddCustomer">Add customer</Button>

@code {
    Tabs tabs = default!;

    private List<Customer> customers = new() { new(1, "Marvin Klein"), new(2, "Vikram Reddy"), new(3, "Bandita PA"), new(4, "Daina JJ") };

    private Customer selectedCustomer = default!;

    protected override void OnInitialized() => selectedCustomer = customers.Last();

    private void AddCustomer()
    {
        var count = customers.Count;
        var customer = new Customer(count + 1, $"Customer {count + 1}");
        customers.Add(customer);
        //selectedCustomer = customer; NOTE: this line is not required
        tabs.InitializeRecentTab(showTab: true);
    }

    private void OnTabClick(TabEventArgs args, Customer customer) => selectedCustomer = customer;
}
