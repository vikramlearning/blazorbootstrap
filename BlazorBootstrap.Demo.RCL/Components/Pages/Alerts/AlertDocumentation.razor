@attribute [Route(pageUrl)]

<PageMetaTags PageUrl="@pageUrl"
              Title="@metaTitle"
              Description="@metaDescription"
              ImageUrl="@imageUrl" />

<PageHero Heading="@pageTitle">
    <LeadSection>@pageDescription</LeadSection>
</PageHero>

<CarbonAds />

<Section Size="HeadingSize.H2" Name="Examples" PageUrl="@pageUrl" Link="examples">
    <div class="mb-3">Alerts are available for any length of text, as well as an optional close button. For proper styling, use one of the eight colors.</div>
    <Demo Type="typeof(Alert_Demo_01_Examples)" Tabs="true" />
</Section>

<Section Size="HeadingSize.H2" Name="Link color" PageUrl="@pageUrl" Link="link-color">
    <div class="mb-3">Use the <code>alert-link</code> css class to quickly provide matching colored links within any alert.</div>
    <Demo Type="typeof(Alert_Demo_02_Link_Color)" Tabs="true" />
</Section>

<Section Size="HeadingSize.H2" Name="Additional Content" PageUrl="@pageUrl" Link="additional-content">
    <div class="mb-3">Alerts can also contain additional HTML elements like headings, paragraphs and dividers.</div>
    <Demo Type="typeof(Alert_Demo_03_Additional_Content)" Tabs="false" />
</Section>

<Section Size="HeadingSize.H2" Name="Icons" PageUrl="@pageUrl" Link="icons">
    <div class="mb-3">Similarly, you can use Bootstrap Icons to create alerts with icons.</div>
    <Demo Type="typeof(Alert_Demo_04_Icons)" Tabs="true" />
</Section>

<Section Size="HeadingSize.H2" Name="Dismissing" PageUrl="@pageUrl" Link="dismissing">
    <div class="mb-3">1. Using the <code>Dismissable="true"</code>, it’s possible to dismiss any alert inline.</div>
    <Demo Type="typeof(Alert_Demo_05_Dismissing_A)" Tabs="true" />

    <div class="my-3">2. Manually we can close an alert with button click.</div>
    <Demo Type="typeof(Alert_Demo_05_Dismissing_B)" Tabs="true" />
</Section>

<Callout Color="CalloutColor.Warning">
    When an alert is dismissed, the element is completely removed from the page structure. If a keyboard user dismisses the alert using the close button, their focus will suddenly be lost and, depending on the browser, reset to the start of the page/document.
    For this reason, we recommend subscribing to the <code>OnClosed</code> callback event and programmatically sets focus to the most appropriate location on the page.
</Callout>

<Section Size="HeadingSize.H2" Name="Switch alert type dynamically" PageUrl="@pageUrl" Link="switch-alert-type-dynamically">
    <Demo Type="typeof(Alert_Demo_06_Switch_Alert_Type_Dynamically)" Tabs="true" />
</Section>

@code{
    private const string pageUrl = RouteConstants.Demos_Alerts_Documentation;
    private const string pageTitle = "Blazor Alert";
    private const string pageDescription = "Provide contextual feedback messages for typical user actions with the handful of available and flexible Blazor Bootstrap alert messages.";
    private const string metaTitle = "Blazor Alert Component";
    private const string metaDescription = "Provide contextual feedback messages for typical user actions with the handful of available and flexible Blazor Bootstrap alert messages.";
    private const string imageUrl = "https://i.imgur.com/FGgEMp6.jpg";
}