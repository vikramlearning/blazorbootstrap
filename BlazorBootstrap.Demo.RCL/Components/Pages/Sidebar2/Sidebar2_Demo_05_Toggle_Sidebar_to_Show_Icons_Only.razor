<div class="bb-page">

  <Sidebar2 @ref="sidebar"
            Href="/"
            IconName="IconName.BootstrapFill"
            Title="Blazor Bootstrap"
            DataProvider="Sidebar2DataProvider" />

  <main>
    <div class="bb-top-row px-4 d-flex justify-content-between">
      <Icon Name="IconName.List" role="button" @onclick="ToggleSidebar" />
      <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
    </div>

    <article class="content px-4">
      <div class="py-2">The sidebar is now @(( sidebar?.IsCollapsed ?? false ) ? "collapsed" : "expanded").</div>
      <Button Type="ButtonType.Button" Size="ButtonSize.Small" Color="ButtonColor.Primary" role="button" @onclick="ToggleSidebar">Toggle</Button>
      <Button Type="ButtonType.Button" Size="ButtonSize.Small" Color="ButtonColor.Primary" role="button" @onclick="() => SetSidebar(isCollapsed: true)">Collapse</Button>
      <Button Type="ButtonType.Button" Size="ButtonSize.Small" Color="ButtonColor.Primary" role="button" @onclick="() => SetSidebar(isCollapsed: false)">Expand</Button>
    </article>
  </main>

</div>

@code {
  Sidebar2 sidebar { get; set; } = default!;
  IEnumerable<NavItem>? navItems;

  private async Task<Sidebar2DataProviderResult> Sidebar2DataProvider( Sidebar2DataProviderRequest request )
  {
    if( navItems is null )
      navItems = GetNavItems();

    return await Task.FromResult( request.ApplyTo( navItems ) );
  }

  private IEnumerable<NavItem> GetNavItems()
  {
    navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "/getting-started", IconName = IconName.HouseDoorFill, Text = "Getting Started"},

            new NavItem { Id = "2", IconName = IconName.LayoutSidebarInset, Text = "Content", IconColor = IconColor.Primary },
            new NavItem { Id = "3", Href = "/icons", IconName = IconName.PersonSquare, Text = "Icons", ParentId="2"},

            new NavItem { Id = "4", IconName = IconName.ExclamationTriangleFill, Text = "Components", IconColor = IconColor.Success },
            new NavItem { Id = "5", Href = "/alerts", IconName = IconName.CheckCircleFill, Text = "Alerts", ParentId="4"},
            new NavItem { Id = "6", Href = "/breadcrumb", IconName = IconName.SegmentedNav, Text = "Breadcrumb", ParentId="4"},
            new NavItem { Id = "7", Href = "/sidebar", IconName = IconName.LayoutSidebarInset, Text = "Sidebar", ParentId="4"},

            new NavItem { Id = "8", IconName = IconName.WindowPlus, Text = "Forms", IconColor = IconColor.Danger },
            new NavItem { Id = "9", Href = "/autocomplete", IconName = IconName.InputCursorText, Text = "Auto Complete", ParentId="8"},
            new NavItem { Id = "10", Href = "/currency-input", IconName = IconName.CurrencyDollar, Text = "Currency Input", ParentId="8"},
            new NavItem { Id = "11", Href = "/number-input", IconName = IconName.InputCursor, Text = "Number Input", ParentId="8"},
            new NavItem { Id = "12", Href = "/switch", IconName = IconName.ToggleOn, Text = "Switch", ParentId="8"},
        };

    return navItems;
  }

  private void ToggleSidebar() => sidebar.ToggleSidebar();

  private void SetSidebar( bool isCollapsed ) => sidebar.IsCollapsed = isCollapsed;
}
