<LineChart @ref="lineChart" Width="800" Class="mb-4"/>

<Button Color="ButtonColor.Primary" Type="ButtonType.Button" Size="Size.Small" @onclick="UpdateIndiaNextOverRunsAsync"> India Next Over </Button>
<Button Color="ButtonColor.Primary" Type="ButtonType.Button" Size="Size.Small" @onclick="UpdateEnglandNextOverRunsAsync"> England Next Over </Button>

@code {
    private LineChart lineChart = default!;
    private LineChartOptions lineChartOptions = default!;
    private ChartData chartData = default!;
    private List<string> labels = default!;

    private List<double> indiaRunsArray = new() { 9, 20, 29, 33, 50, 66, 75, 86, 91, 105, 120, 126, 141, 150, 156, 164, 177, 180, 184, 195 };
    private List<double> englandRunsArray = new() { 1, 1, 8, 19, 24, 26, 39, 47, 56, 66, 75, 88, 95, 100, 109, 114, 124, 129, 140, 142 };

    private int indiaCurrentOver;
    private int englandCurrentOver;

    protected override void OnInitialized()
    {
        labels = new List<string> { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" };
        lineChartOptions = GetLineChartOptions();
        chartData = new ChartData { Labels = labels, Datasets = GetDefaultDatasets() };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await lineChart.InitializeAsync(chartData, lineChartOptions);
    }

    private async Task UpdateIndiaNextOverRunsAsync()
    {
        if (indiaCurrentOver > 0 && indiaCurrentOver > indiaRunsArray.Count - 1)
            return;

        chartData = await lineChart.AddDataAsync(chartData, $"{indiaCurrentOver + 1}", new LineChartDatasetData("India", indiaRunsArray[indiaCurrentOver]));
        indiaCurrentOver++;
    }

    private async Task UpdateEnglandNextOverRunsAsync()
    {
        if (englandCurrentOver > 0 && englandCurrentOver > englandRunsArray.Count - 1)
            return;

        chartData = await lineChart.AddDataAsync(chartData, $"{englandCurrentOver + 1}", new LineChartDatasetData("England", englandRunsArray[englandCurrentOver]));
        englandCurrentOver++;
    }

    private List<IChartDataset> GetDefaultDatasets()
    {
        var datasets = new List<IChartDataset>
                       {
                           new LineChartDataset
                           {
                               Label = "India",
                               Data = new List<double>(),
                               BackgroundColor = new List<string> { "rgb(88, 80, 141)" },
                               BorderColor = new List<string> { "rgb(88, 80, 141)" },
                               BorderWidth = new List<double> { 2 },
                               HoverBorderWidth = new List<double> { 4 },
                               PointBackgroundColor = new List<string> { "rgb(88, 80, 141)" },
                               PointBorderColor = new List<string> { "rgb(88, 80, 141)" },
                               PointRadius = new List<int> { 0 }, // hide points
                               PointHoverRadius = new List<int> { 4 }
                           },
                           new LineChartDataset
                           {
                               Label = "England",
                               Data = new List<double>(),
                               BackgroundColor = new List<string> { "rgb(255, 166, 0)" },
                               BorderColor = new List<string> { "rgb(255, 166, 0)" },
                               BorderWidth = new List<double> { 2 },
                               HoverBorderWidth = new List<double> { 4 },
                               PointBackgroundColor = new List<string> { "rgb(255, 166, 0)" },
                               PointBorderColor = new List<string> { "rgb(255, 166, 0)" },
                               PointRadius = new List<int> { 0 }, // hide points
                               PointHoverRadius = new List<int> { 4 }
                           }
                       };

        return datasets;
    }

    private LineChartOptions GetLineChartOptions()
    {
        var options = new LineChartOptions();

        options.Interaction.Mode = InteractionMode.Index;

        options.Plugins.Title!.Text = "WORM";
        options.Plugins.Title.Display = true;
        options.Plugins.Title!.Font!.Size = 20;

        options.Responsive = true;

        options.Scales.X!.Title!.Text = "Overs";
        options.Scales.X.Title.Display = true;

        options.Scales.Y!.Title!.Text = "Runs";
        options.Scales.Y.Title.Display = true;
        options.Scales.Y.SuggestedMax = 150;

        return options;
    }

}