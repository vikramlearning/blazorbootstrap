<div class="container-fluid overflow-x-auto">
    <LineChart @ref="lineChart" Width="800" />
</div>

<div class="mt-5">
    <Button Color="ButtonColor.Primary" Type="ButtonType.Button" Size="ButtonSize.Small" @onclick="UpdateIndiaNextOverRunsAsync"> India Next Over </Button>
    <Button Color="ButtonColor.Primary" Type="ButtonType.Button" Size="ButtonSize.Small" @onclick="UpdateEnglandNextOverRunsAsync"> England Next Over </Button>
</div>

@code {
    private LineChart lineChart = default!;
    private LineChartOptions lineChartOptions = default!;
    private ChartData chartData = default!;
    private List<string> labels = default!;

    private List<double> indiaRunsArray = new() { 9, 20, 29, 33, 50, 66, 75, 86, 91, 105, 120, 126, 141, 150, 156, 164, 177, 180, 184, 195 };
    private List<double> englandRunsArray = new() { 1, 1, 8, 19, 24, 26, 39, 47, 56, 66, 75, 88, 95, 100, 109, 114, 124, 129, 140, 142 };

    private int indiaCurrentOver;
    private int englandCurrentOver;

    protected override void OnInitialized()
    {
        labels = new List<string> { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" };
        lineChartOptions = GetLineChartOptions();
        chartData = new ChartData { Labels = labels, Datasets = GetDefaultDatasets() };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await lineChart.InitializeAsync(chartData, lineChartOptions);
    }

    private async Task UpdateIndiaNextOverRunsAsync()
    {
        if (indiaCurrentOver > 0 && indiaCurrentOver > indiaRunsArray.Count - 1)
            return;

        chartData = await lineChart.AddDataAsync(chartData, $"{indiaCurrentOver + 1}", new LineChartDatasetData("India", indiaRunsArray[indiaCurrentOver]));
        indiaCurrentOver++;
    }

    private async Task UpdateEnglandNextOverRunsAsync()
    {
        if (englandCurrentOver > 0 && englandCurrentOver > englandRunsArray.Count - 1)
            return;

        chartData = await lineChart.AddDataAsync(chartData, $"{englandCurrentOver + 1}", new LineChartDatasetData("England", englandRunsArray[englandCurrentOver]));
        englandCurrentOver++;
    }

    private List<IChartDataset> GetDefaultDatasets()
    {
        var datasets = new List<IChartDataset>
                       {
                           new LineChartDataset
                           {
                               Label = "India",
                               Data = new List<double?>(),
                               BackgroundColor = new List<string> { "rgb(88, 80, 141)" },
                               BorderColor = new List<string> { "rgb(88, 80, 141)" },
                               BorderWidth = new List<double> { 2 },
                               HoverBorderWidth = new List<double> { 4 },
                               PointBackgroundColor = ["rgb(88, 80, 141)"],
                               PointBorderColor = ["rgb(88, 80, 141)"],
                               PointRadius = [0], // hide points
                               PointHoverRadius = [4]
                           },
                           new LineChartDataset
                           {
                               Label = "England",
                               Data = new List<double?>(),
                               BackgroundColor = new List<string> { "rgb(255, 166, 0)" },
                               BorderColor = new List<string> { "rgb(255, 166, 0)" },
                               BorderWidth = new List<double> { 2 },
                               HoverBorderWidth = new List<double> { 4 },
                               PointBackgroundColor = ["rgb(255, 166, 0)"],
                               PointBorderColor = ["rgb(255, 166, 0)"],
                               PointRadius = [0], // hide points
                               PointHoverRadius = [4]
                           }
                       };

        return datasets;
    }

    private LineChartOptions GetLineChartOptions()
    {
        var options = new LineChartOptions();

        options.Interaction.Mode = InteractionMode.Index;

        options.Plugins.Title = new ChartPluginsTitle()
            {
                Text = "WORM",
                Display = true,
                Font = new ChartFont() { Size = 20 }
            };
        options.Responsive = true;
        options.Scales = new Scales
            {
                X = new ChartAxes()
                {
                    Title = new ChartAxesTitle() { Text = "Over", Display = true }
                },
                Y = new ChartAxes()
                {
                    Title = new ChartAxesTitle() { Text = "Runs", Display = true },
                    SuggestedMax = 150
                },
            };

        return options;
    }

}