@attribute [Route(pageUrl)]

<PageMetaTags PageUrl="@pageUrl"
              Title="@metaTitle"
              Description="@metaDescription"
              ImageUrl="@imageUrl" />

<PageHero Heading="@pageTitle">
    <LeadSection>@pageDescription</LeadSection>
</PageHero>

<CarbonAds />

<Section Size="HeadingSize.H2" Name="Single button" PageUrl="@pageUrl" Link="single-button">
    <Demo Type="typeof(Dropdown_Demo_01_Single_Button)" Tabs="false" />
</Section>

<Section Size="HeadingSize.H2" Name="Color" PageUrl="@pageUrl" Link="color">
    <Demo Type="typeof(Dropdown_Demo_02_Color)" Tabs="true" />
</Section>

<Section Size="HeadingSize.H2" Name="Split button" PageUrl="@pageUrl" Link="split-button">
    <Demo Type="typeof(Dropdown_Demo_03_Split_Button)" Tabs="true" />
</Section>

<Section Size="HeadingSize.H2" Name="Sizing" PageUrl="@pageUrl" Link="sizing">
    <Demo Type="typeof(Dropdown_Demo_04_A_Sizing)" Tabs="false" />
    <Demo Type="typeof(Dropdown_Demo_04_B_Sizing)" Tabs="false" />
</Section>

<Section Size="HeadingSize.H2" Name="Directions" PageUrl="@pageUrl" Link="directions" />
<Section Size="HeadingSize.H2" Name="Dropup" PageUrl="@pageUrl" Link="dropup">
    <div class="mb-3">
        To trigger <b>DropdownMenu</b> above elements, add the <code>Direction="DropdownDirection.Dropup"</code> to the <b>Dropdown</b> component.
    </div>
    <Demo Type="typeof(Dropdown_Demo_05_A_Directions_Dropup)" Tabs="false" />
</Section>
<Section Size="HeadingSize.H2" Name="Dropup centered" PageUrl="@pageUrl" Link="dropup-centered">
    <div class="mb-3">
        To center the <b>DropdownMenu</b> above the toggle, add the <code>Direction="DropdownDirection.DropupCentered"</code> to the <b>Dropdown</b> component.
    </div>
    <Demo Type="typeof(Dropdown_Demo_05_B_Directions_DropupCentered)" Tabs="false" />
</Section>
<Section Size="HeadingSize.H2" Name="Dropend" PageUrl="@pageUrl" Link="dropend">
    <div class="mb-3">
        To trigger <b>DropdownMenu</b> at the right of elements, add the <code>Direction="DropdownDirection.Dropend"</code> to the <b>Dropdown</b> component.
    </div>
    <Demo Type="typeof(Dropdown_Demo_05_C_Directions_Dropend)" Tabs="false" />
</Section>
<Section Size="HeadingSize.H2" Name="Dropstart" PageUrl="@pageUrl" Link="dropstart">
    <div class="mb-3">
        To trigger <b>DropdownMenu</b> at the left of elements, you can add the <code>Direction="DropdownDirection.Dropstart"</code> to the <b>Dropdown</b> component.
    </div>
    <Demo Type="typeof(Dropdown_Demo_05_D_Directions_Dropstart)" Tabs="false" />
</Section>
<Section Size="HeadingSize.H2" Name="Active" PageUrl="@pageUrl" Link="active">
    <div class="mb-3">
        To style <b>DropdownItem</b> as active, add the <code>Active="true"</code> parameter to the <b>DropdownItem</b> element in the <b>DropdownMenu</b>.
    </div>
    <Demo Type="typeof(Dropdown_Demo_06_Active)" Tabs="false" />
</Section>
<Section Size="HeadingSize.H2" Name="Disabled" PageUrl="@pageUrl" Link="disabled">
    <div class="mb-3">
        To disable the dropdown, set the <b>Disabled</b> parameter to <b>true</b> on the <b>Dropdown</b> component.
    </div>
    <Demo Type="typeof(Dropdown_Demo_07_A_Disabled)" Tabs="false" />
    <div class="mb-3">
        To style a dropdown item as disabled, set the <b>Disabled</b> parameter to <b>true</b> on the <b>DropdownItem</b> element in the <b>DropdownMenu</b> component.
    </div>
    <Demo Type="typeof(Dropdown_Demo_07_B_Disabled)" Tabs="false" />
</Section>

<Section Size="HeadingSize.H2" Name="Menu position" PageUrl="@pageUrl" Link="menu-position">
    <div class="mb-3">
        <p>
            By default, a <b>DropdownMenu</b> is automatically positioned at 100% from the top and along the left side of its parent.
            You can change this with the <b>Position</b> parameter.
        </p>
        <p>
            To right-align a <b>DropdownMenu</b>, add the <code>Position="DropdownMenuPosition.End"</code> parameter to the <b>DropdownMenu</b> component.
            Directions are mirrored when using Bootstrap in RTL.
        </p>
    </div>
    <Demo Type="typeof(Dropdown_Demo_08_Menu_Position)" Tabs="false" />
</Section>

<Section Size="HeadingSize.H2" Name="Menu content" PageUrl="@pageUrl" Link="menu-content" />

<Section Size="HeadingSize.H2" Name="Header" PageUrl="@pageUrl" Link="header">
    <div class="mb-3">Add a header to label sections of actions in any dropdown menu.</div>
    <Demo Type="typeof(Dropdown_Demo_09_Header)" Tabs="false" />
</Section>

<Section Size="HeadingSize.H2" Name="Dividers" PageUrl="@pageUrl" Link="dividers">
    <div class="mb-3">Separate groups of related menu items with a divider.</div>
    <Demo Type="typeof(Dropdown_Demo_10_Dividers)" Tabs="false" />
</Section>

<Section Size="HeadingSize.H2" Name="Text" PageUrl="@pageUrl" Link="text">
    <div class="mb-3">
        Place any freeform text within a dropdown menu with text and use spacing utilities. 
        Note that youll likely need additional sizing styles to constrain the menu width.
    </div>
    <Demo Type="typeof(Dropdown_Demo_11_Text)" Tabs="false" />
</Section>

<Section Size="HeadingSize.H2" Name="Forms" PageUrl="@pageUrl" Link="forms">
    <div class="mb-3">
        Put a form within a dropdown menu, or make it into a dropdown menu, and use margin or padding utilities to give it the negative space you require.
    </div>
    <Demo Type="typeof(Dropdown_Demo_12_Forms)" Tabs="true" />
</Section>

<Section Size="HeadingSize.H2" Name="Auto close behavior" PageUrl="@pageUrl" Link="auto-close-behavior">
    <div class="mb-3">
        By default, the <b>DropdownMenu</b> is closed when clicking either inside or outside the <b>DropdownMenu</b>.
        You can use the <b>AutoClose</b> and <b>AutoCloseBehavior</b> parameters to change this behavior of the <b>Dropdown</b>.
    </div>
    <Demo Type="typeof(Dropdown_Demo_13_AutoClose)" Tabs="true" />
</Section>

<Section Size="HeadingSize.H2" Name="Methods" PageUrl="@pageUrl" Link="methods">
    <div>
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Method</th>
                <th scope="col">Description</th>
            </tr>
            </thead>
            <tbody class="table-group-divider">
            <tr>
                <th scope="row"><code>HideAsync</code></th>
                <td> Hides the dropdown menu of a given navbar or tabbed navigation.</td>
            </tr>
            <tr>
                <th scope="row"><code>ShowAsync</code></th>
                <td>Shows the dropdown menu of a given navbar or tabbed navigation.</td>
            </tr>
            <tr>
                <th scope="row"><code>ToggleAsync</code></th>
                <td>Toggles the dropdown menu of a given navbar or tabbed navigation.</td>
            </tr>
            <tr>
                <th scope="row"><code>UpdateAsync</code></th>
                <td>Updates the position of an element’s dropdown.</td>
            </tr>
            </tbody>
        </table>
    </div>
    <Demo Type="typeof(Dropdown_Demo_14_Methods)" Tabs="true" />
</Section>

<Section Size="HeadingSize.H2" Name="Events" PageUrl="@pageUrl" Link="events">
    <div>
        All dropdown events are fired at the toggling element and then bubbled up.

        <table class="table">
            <thead>
            <tr>
                <th scope="col">Event type</th>
                <th scope="col">Description</th>
            </tr>
            </thead>
            <tbody class="table-group-divider">
            <tr>
                <th scope="row"><code>OnHiding</code></th>
                <td>This event is fired immediately when the hide method has been called.</td>
            </tr>
            <tr>
                <th scope="row"><code>OnHidden</code></th>
                <td>This event is fired when an dropdown element has been hidden from the user (will wait for CSS transitions to complete).</td>
            </tr>
            <tr>
                <th scope="row"><code>OnShowing</code></th>
                <td>This event fires immediately when the show instance method is called.</td>
            </tr>
            <tr>
                <th scope="row"><code>OnShown</code></th>
                <td>This event is fired when an dropdown element has been made visible to the user (will wait for CSS transitions to complete).</td>
            </tr>
            </tbody>
        </table>
    </div>
    <Demo Type="typeof(Dropdown_Demo_15_Events)" Tabs="true" />
</Section>

@code {
    private const string pageUrl = RouteConstants.Demos_Dropdown_Documentation;
    private const string pageTitle = "Blazor Dropdown";
    private const string pageDescription = "Dropdowns are toggleable, contextual overlays for displaying lists of links and more. They are toggled by clicking, not by hovering; this is an intentional design decision'by bootstrap.";
    private const string metaTitle = "Blazor Dropdown Component";
    private const string metaDescription = "Dropdowns are toggleable, contextual overlays for displaying lists of links and more. They are toggled by clicking, not by hovering; this is an intentional design decision'by bootstrap.";
    private const string imageUrl = "https://i.imgur.com/beAr31J.png";
}
